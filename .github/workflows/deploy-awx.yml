name: Deploy AWX on Kubernetes

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/awx-deployer

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Prepare kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > /tmp/kubeconfig
        chmod 600 /tmp/kubeconfig

    - name: Deploy AWX using containerized script
      run: |
        docker run --rm \
          -v /tmp/kubeconfig:/kubeconfig:ro \
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

    - name: Verify deployment
      run: |
        export KUBECONFIG=/tmp/kubeconfig
        echo "Checking AWX deployment status..."
        kubectl get awx -n awx
        kubectl get pods -n awx
        kubectl get ingress -n awx
        
        echo "Waiting for AWX to be fully ready..."
        kubectl wait --for=condition=Running awx/awx-instance -n awx --timeout=600s || true
        
        echo "AWX Service Status:"
        kubectl get svc -n awx
        
        echo "AWX Ingress Status:"
        kubectl describe ingress -n awx || echo "No ingress found yet"

    - name: Get AWX access information
      run: |
        export KUBECONFIG=/tmp/kubeconfig
        echo "=========================="
        echo "AWX ACCESS INFORMATION"
        echo "=========================="
        echo "URL: https://awx.sin.padminisys.com"
        echo "Username: admin"
        
        # Try to get the admin password
        if kubectl get secret awx-admin-password -n awx >/dev/null 2>&1; then
          PASSWORD=$(kubectl get secret awx-admin-password -n awx -o jsonpath='{.data.password}' | base64 -d)
          echo "Password: $PASSWORD"
        else
          echo "Password: admin123!@# (default)"
        fi
        echo "=========================="

    - name: Cleanup
      if: always()
      run: |
        rm -f /tmp/kubeconfig
